continue
@current_user = User.find_by(email: @decoded[:user_email])
@decoded = JsonWebToken.decode(header)
continue
current_user
current_user&.manager?
continue
current_user = User.find_by(email: @decoded[:user_email])
continue
current_user = User.find_by(email: @decoded[:user_email])
continue
current_user = User.find_by(email: @decoded[:user_email])
@decoded = JsonWebToken.decode(header)
continue
header = request.headers['Authorization']
continue
header = request.headers['Authorization']
continue
response.status
response.body
continue
user.destroy
continue
user.reload
user
continue
continue!
continue
 @current_user = User.find_by(email: @decoded[:user_email])
 @decoded = JsonWebToken.decode(header)
header = header.split(' ').last if header
header = request.headers['Authorization']
continue
response.body
continue
response.body
continue
user
continue
User.new(params.slice(:email, :name, :username, :role))
params.slice(:email, :name, :username, :role)
(params.slice(:email, :name, :username, :role)
params
continue
users.where("name ILIKE ? OR username ILIKE ? OR email ILIKE ?", params[:tag].strip, params[:tag].strip, params[:tag].strip).count
users.where("name ILIKE ? OR username ILIKE ? OR email ILIKE ?", params[:tag].strip, params[:tag].strip, params[:tag].strip)
params[:tag]
continue
JSON params[:roles]
params[:roles]
params[:roles].to_a
params[:roles]
continue
params[:roles]
params
continue
 render json: user, each_serializer: UserSerializer, status: :ok
continue
params["email"]
params
continue
current_user
continue
response.body
continue
response.body
continue
body.first.keys
body = JSON response.body
response.body
continue
current_user.administrator?
current_user
continue
@current_user
current_user
continue
@decoded
continue
params[:email].blank?
continue
params[:email]
continue
self
User.count == 1
User.count.one?
self
self.count
count
User.count
continue
response.body
continue
response.body
continue
@user
continue
response.body
response
continue
response.body
body
continue
@user
@user.save!
 @user = User.new(user_params)
 @user = User.new(user_params
user_params
continue
params
params.permit(:name, :username, :email, :password, :password_confirmation)
continue
params
user_params
